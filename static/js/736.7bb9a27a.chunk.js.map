{"version":3,"file":"static/js/736.7bb9a27a.chunk.js","mappings":"oSAEaA,EAAYC,EAAAA,GAAAA,GAAH,4GAGb,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAGfC,EAAcJ,EAAAA,GAAAA,GAAH,+CACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,U,SCFzBC,EAAO,WAClB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEIH,GAAY,GAFhB,UAG2BI,EAAAA,EAAAA,IAAgBV,GAH3C,gBAGYG,EAHZ,EAGYA,KACRC,EAAQD,GAJZ,gDAMIK,EAAS,EAAD,IANZ,yBAQIF,GAAY,GARhB,6EADc,uBAAC,WAAD,wBAYdK,KACC,CAACX,KAGF,UAACY,EAAA,EAAD,CAAKC,GAAG,IAAR,UACGN,IAAS,2EACTF,IAAY,SAACS,EAAA,EAAD,KACb,SAACvB,EAAD,UACGY,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,UAACvB,EAAD,YACE,gBACEwB,IACEF,EAAY,4DAC6CA,GACrD,sCAENG,IAAKJ,KAEP,0BACE,iCADF,IACgBA,MAEhB,0BACE,sCADF,IACqBD,OAbLG,a,0MChCtBG,EAAS,mCAEfC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,IAAAA,IAAA,sCAAyCD,IADjC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAgB,mCAAG,WAAMR,GAAN,uFACPI,IAAAA,IAAA,iBAAoBJ,EAApB,oBAAkCG,IAD3B,cACxBG,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKhBE,EAAgB,mCAAG,WAAMC,GAAN,uFACPN,IAAAA,IAAA,+BACGD,EADH,kBACmBO,EADnB,YADO,cACxBJ,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBhB,EAAe,mCAAG,WAAMS,GAAN,uFACNI,IAAAA,IAAA,iBAAoBJ,EAApB,4BAA0CG,IADpC,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAkB,mCAAG,WAAMX,GAAN,uFACTI,IAAAA,IAAA,iBAAoBJ,EAApB,4BAA0CG,IADjC,cAC1BG,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const CardWrapper = styled.li`\n  border-radius: ${p => p.theme.radii.normal};\n`;\n","import { Box } from 'components/Box/Box';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastInfoById } from 'service/api';\nimport { CardWrapper, Container } from './Cast.styled';\n\nexport const Cast = () => {\n  const { moviesId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        setIsLoader(true);\n        const { cast } = await getCastInfoById(moviesId);\n        setCast(cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoader(false);\n      }\n    }\n    getCast();\n  }, [moviesId]);\n\n  return (\n    <Box mt=\"4\">\n      {error && <p>Something went wrong, please reload the page...</p>}\n      {isLoader && <Loader />}\n      <Container>\n        {cast.map(({ character, name, profile_path, id }) => (\n          <CardWrapper key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://www.themoviedb.org/t/p/w138_and_h175_face/${profile_path}`\n                  : 'https://via.placeholder.com/138x175'\n              }\n              alt={name}\n            />\n            <p>\n              <b>Name:</b> {name}\n            </p>\n            <p>\n              <b>Character:</b> {character}\n            </p>\n          </CardWrapper>\n        ))}\n      </Container>\n    </Box>\n  );\n};\n","import axios from 'axios';\n\nconst MY_KEY = 'b49485b850e1a5911c943abe3524caa9';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${MY_KEY}`);\n  return response.data;\n};\n\nexport const getMovieInfoById = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${MY_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${MY_KEY}&query=${query}&page=1`\n  );\n  return response.data;\n};\n\nexport const getCastInfoById = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${MY_KEY}`);\n  return response.data;\n};\n\nexport const getReviewsInfoById = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${MY_KEY}`);\n  return response.data;\n};\n"],"names":["Container","styled","p","theme","space","CardWrapper","radii","normal","Cast","moviesId","useParams","useState","cast","setCast","isLoader","setIsLoader","error","setError","useEffect","getCastInfoById","getCast","Box","mt","Loader","map","character","name","profile_path","id","src","alt","MY_KEY","axios","getTrendingMovies","response","data","getMovieInfoById","getMoviesByQuery","query","getReviewsInfoById"],"sourceRoot":""}